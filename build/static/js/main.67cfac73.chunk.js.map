{"version":3,"sources":["components/SearchContainer.jsx","components/HomePage.jsx","components/HeaderBar.jsx","components/FavoriteItem.jsx","components/FavoritesBox.jsx","components/FilterBox.jsx","components/ListBoxItem.jsx","components/ListBox.jsx","components/DefaultPage.jsx","loadingGif/giphy.gif","components/FavoriteItemDetails.jsx","components/FavoritesBoxDetails.jsx","components/TabComponent/DetailsTab.jsx","components/TabComponent/CharactersTab.jsx","components/TabComponent/TextTab.jsx","components/TabComponent/Tabs.jsx","components/PlayDetailPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchContainer","props","Search","Input","useState","title","updateTitle","suffix","AudioOutlined","style","fontSize","color","id","placeholder","size","onChange","e","target","value","to","pathname","state","type","HomePage","useEffect","timer","setTimeout","console","log","clearTimeout","className","href","SubMenu","Menu","HeaderBar","isProfileModalVisible","setIsProfileModalVisible","isAboutModalVisible","setIsAboutModalVisible","handleProfileClose","handleAboutClose","src","selectedKeys","mode","icon","Item","onClick","UserOutlined","PaperClipOutlined","logout","LogoutOutlined","visible","onCancel","footer","userData","picture","thumbnail","details","firstname","lastname","city","country","membership","date_joined","FavoriteItem","updateCurrent","play","url","fetch","then","response","json","data","localStorage","setItem","JSON","stringify","removeFromLike","message","info","FavoriteBox","plays","map","p","index","updateTab","FilterBox","filter","updateFilter","status","beforeCheck","setBeforeCheck","afterCheck","setAfterCheck","updateFilteredData","handleFieldClick","tempStateObj","name","handleCheckBoxClick","before","after","updateFaveBox","updateIsChecked","onSubmit","preventDefault","htmlFor","disabled","defaultValue","ListBoxItem","userInfo","likelyDate","CSSTransition","in","timeout","classNames","appear","addToLike","H1","styled","h1","ListBox","matchesBoolean","cursor","sortTitle","sortYear","DefaultPage","location","useLocation","matchesFound","setMatchesFound","filters","setFilteredData","setsortedPlays","showFavorites","isChecked","likedPlays","updatedFilteredData","Object","keys","length","mainData","toLowerCase","forEach","d","genre","includes","push","sortData","sort","a","b","at","bt","ay","parseInt","by","FavoriteItemDetails","FavoriteBoxDetails","DetailsTab","current","wiki","gutenberg","shakespeareOrg","desc","CharactersTab","personas","parse","getItem","persona","position","player","TextTab","currentSpeaker","playInfo","currentAct","currentScene","acts","scenes","s","stageDirection","speeches","speaker","searchWords","highlightedWord","textToHighlight","String","lines","Tabs","filename","tab","tabIsText","PlayDetailPage","setTab","setCurrentAct","setCurrentScene","setCurrentSpeaker","setHighlightedWord","updateTabThroughClick","getInfo","error","updateBoxForFave","i","act","synopsis","App","setData","setUserData","filteredData","like","setLike","currentPlay","setCurrentPlay","setIsChecked","setShowFavorites","Axios","method","withCredentials","res","addLikes","temp","find","removeLikes","indexOf","splice","updateCurrentPlay","clickedPlay","basename","path","exact","component","window","assign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67cfac73.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {Input, Space} from 'antd';\nimport { AudioOutlined } from '@ant-design/icons';\n\nconst SearchContainer = (props) => {\n  const { Search } = Input;\n  const [title, updateTitle] = useState();\n\n  const handleInputChange = e => {\n    updateTitle(e.target.value);\n  }\n\n  const suffix = (\n    <AudioOutlined\n      style={{\n        fontSize: 16,\n        color: '#1890ff',\n      }}\n    />\n  );\n  //<input type=\"text\" id=\"title\" placeholder=\"Search Play Here\" onChange={handleInputChange}></input>\n\n    return (\n    <div id=\"searchContainer\">\n\n      <div id=\"homeTitleInput\">\n      <Space>\n        <Search\n        id=\"searchBarHome\"\n        placeholder=\"Search Play Here\"\n        size=\"large\"\n        suffix={suffix}\n        onChange={handleInputChange}\n      />\n      </Space>\n        \n      </div>\n      <div id=\"homeButtons\">\n      <Link to={{pathname:\"/default\", state: {title: title }}}>\n        <div id=\"matchingButton\">\n          <button type=\"button\" data-inline=\"true\" >Show matching Plays</button>\n        </div>\n      </Link>\n      <Link to={{pathname:\"/default\", state: {title: '' }}}>\n        <div id=\"showAllButton\">\n          <button type=\"button\" data-inline=\"true\"  >Show All Plays</button>\n        </div>\n      </Link>\n      </div>\n    </div> \n  );\n};\n\nexport default SearchContainer;","import React, { useEffect }from \"react\";\nimport SearchContainer from \"./SearchContainer\";\n\nconst HomePage = (props) => {\n\n  \n  {useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log('This will run after 5 seconds!')\n    }, 5000);\n    clearTimeout(timer);\n    \n  }, [])}\n\n  return (\n\n\n      <div className=\"homePage\">\n        <div id=\"homeSearch\"> <SearchContainer /> \n        </div>\n        \n          <div id=\"heroCredit\">\n            Photo by{\" \"}\n            <a href=\"https://unsplash.com/@maxmuselmann?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\n              Max Muselmann\n            </a>{\" \"}\n            on{\" \"}\n            <a href=\"https://unsplash.com/s/photos/shakespeare?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\n              Unsplash\n            </a>\n          \n        </div>\n        \n      </div>\n  );\n};\nexport default HomePage;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n//import Modal from \"react-modal\";\n//import ProfileModal from \"react-modal\";\nimport { Button, Modal, Menu, Divider } from 'antd';\nimport { UserOutlined, LogoutOutlined, PaperClipOutlined} from '@ant-design/icons';\n\n\nconst { SubMenu } = Menu;\n\n\nconst HeaderBar = (props) => {\n\n  const [isProfileModalVisible, setIsProfileModalVisible] = useState(false);\n  const [isAboutModalVisible, setIsAboutModalVisible] = useState(false);\n\n  const showProfileModal = () => {\n    setIsProfileModalVisible(true);\n  };\n\n  const handleProfileClose = () => {\n    setIsProfileModalVisible(false);\n  };\n\n  const showAboutModal = () => {\n    setIsAboutModalVisible(true);\n  };\n\n  const handleAboutClose = () => {\n    setIsAboutModalVisible(false);\n  };\n\n\n  const current = 'menu';\n\n  return (\n    <div id=\"headerBar\">\n      <div id=\"homeLogoButton\">\n        <Link to=\"/\">\n        <img src=\"https://img.icons8.com/office/40/000000/home--v1.png\"/>\n        </Link>\n      </div>\n\n\n      <Menu id=\"menuDropdown\" selectedKeys={[current]} mode=\"horizontal\">\n        <SubMenu key=\"SubMenu\" icon={<img src=\"https://img.icons8.com/office/40/000000/menu--v1.png\"/>}>\n            <Menu.Item key=\"profile\" onClick={showProfileModal} icon={ <UserOutlined/> }>Profile</Menu.Item>\n            <Menu.Item key=\"about\" onClick={showAboutModal} icon={<PaperClipOutlined/>}> About </Menu.Item>\n            <Divider/>\n            <Menu.Item key=\"logout\" onClick={props.logout} icon={<LogoutOutlined />}> Logout </Menu.Item>\n        </SubMenu>\n      </Menu>\n      \n      \n      <Modal title=\"About Us\" className=\"aboutModal\" visible={isAboutModalVisible} onCancel={handleAboutClose} \n        footer={[ <Button key=\"close\" onClick={handleAboutClose}> Close </Button> ]}>\n          <h2>Team Members</h2>\n          <p>Anro Tran</p>\n          <p>Peter Huang</p>\n          <p>Mohamed Aly</p>\n          <h2>Github Repo</h2>\n          <a href=\"https://github.com/phuan516/comp4513-assignment1\">\n            <p>Link to Repository</p>\n          </a>\n\n          <h2>Reference Links</h2>\n          <a href=\"https://blog.logrocket.com/how-to-build-tab-component-react/\">\n          <p>Building your own tab components</p>\n            </a>\n\n            <a href=\"https://stackoverflow.com/questions/24502898/show-or-hide-element-in-react\">\n          <p>How to hide or show elements in react</p>\n            </a>\n            <a href=\"https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_custom_scrollbar\">\n          <p>Custom scrollbars with webkit</p>\n            </a>\n            <a href=\"https://www.w3schools.com/howto/howto_css_full_page.asp\">\n          <p>How to add full page background image</p>\n            </a>\n\n            <a href=\"https://stackoverflow.com/questions/4137255/checkboxes-in-web-pages-how-to-make-them-bigger\">\n              <p>How to make checkboxes bigger with webkit</p> \n            </a>\n      </Modal>\n\n\n   \n\n      <Modal title=\"Profile\" className=\"profileModal\" visible={isProfileModalVisible} onCancel={handleProfileClose} \n      footer={[ <Button key=\"close\" onClick={handleProfileClose}> Close </Button> ]}>\n        <p id=\"profileimg\"> <img src = {props.userData.picture.thumbnail}/> </p>\n        <br/>\n        <h1>{props.userData.details.firstname + \" \"}{props.userData.details.lastname}</h1>\n        <h2>{props.userData.details.city + \", \"} {props.userData.details.country}</h2>\n        <h2>{\"Date joined: \" + props.userData.membership.date_joined}</h2>\n      </Modal>\n\n    </div>\n  );\n};\n\nexport default HeaderBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { message} from 'antd';\n\nconst FavoriteItem = (props) => {\n\n  const info = () => {\n    props.removeFromLike(props.play);\n    message.info(props.play.title + \" has been removed\");\n  };\n\n  const updateCurrentPlay = () => {\n    props.updateCurrent(props.play);\n    const url = \"https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=\"+ props.play.id;\n    fetch (url)\n    .then (response => response.json())\n    .then(data => { localStorage.setItem(\"playInfo\", JSON.stringify(data))} )\n  }\n\n  \n\n  return (\n    <div id=\"favoriteItem\">\n\n\n      <Link to=\"/playDetails\">\n        <p onClick={updateCurrentPlay}> {\" \"}\n          {props.play.title}{\" \"} </p>\n      </Link>\n      \n      <button type=\"button\" id=\"deleteButton\" onClick={info}>\n        Remove\n      </button>\n\n      \n\n    </div>\n\n    \n  );\n};\n\nexport default FavoriteItem;\n","import React from \"react\";\nimport FavoriteItem from \"./FavoriteItem\";\n\nconst FavoriteBox = (props) => {\n  return (\n    <div id=\"favoritesBox\">\n      <h1>Favorites</h1>\n      <hr/>\n      <div id=\"favoritesList\">\n        {props.plays.map((p, index) => (\n        <FavoriteItem play={p} removeFromLike={props.removeFromLike} \n        updateCurrent={props.updateCurrent} updateTab={props.updateTab}\n          key={index}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FavoriteBox;\n","import React, { useState, useEffect } from \"react\";\n\nconst FilterBox = (props) => {\n  const [filter, updateFilter] = useState({});\n  const [beforeCheck, setBeforeCheck] = useState({status: true})\n  const [afterCheck, setAfterCheck] = useState({status: true});\n\nuseEffect (() => {\n\n  //if title is set from search container, apply the filter upon first render of page.\n  if (props.title) {\n    updateFilter({title: props.title})\n    props.updateFilteredData({title: props.title});\n  } else {\n    props.updateFilteredData({});\n  }\n}, []\n);\n  //handles all field changes.\n  const handleFieldClick = (e) => {\n\n    const tempStateObj = {...filter};\n\n    //if a field becomes empty, remove it from state.\n    if (e.target.value === '' ) {\n        delete tempStateObj[e.target.name];\n    } else {\n    //undergo necessary state updates.\n    tempStateObj[e.target.name] = e.target.value;\n\n    //If it is for the before or after fields, must update the before and after states as these are distinct\n    //due to their checkbox functionality/processing.\n\n     if (e.target.name === 'before') {\n        setBeforeCheck({status: false, value: e.target.value })\n     }\n\n      if (e.target.name === 'after') {\n       setAfterCheck({status: false, value: e.target.value  })\n     }\n    \n    }\n \n    //update filter state.\n    updateFilter(tempStateObj);\n\n  }\n\n  //process the form submission up when \"filter\" clicked.\n const handleSubmit = e => {\n    props.updateFilteredData(filter);\n    e.preventDefault(); \n  }\n\n  //Checkbox functionality, of enabling and disabling values entered processed.\n  const handleCheckBoxClick = e => {\n  \n    const tempStateObj = {...filter};\n\n    if (e.target.name === 'before' && beforeCheck.status === false) {\n      setBeforeCheck({status: true, value: beforeCheck.value});\n      delete tempStateObj['before'];\n      \n    } else  {\n      if (e.target.name === 'before' &&  beforeCheck.status === true) {\n        setBeforeCheck({status: false, value: beforeCheck.value});\n        tempStateObj.before = beforeCheck.value;\n \n    } else {\n      if (e.target.name === 'after' &&  afterCheck.status === false) { \n        setAfterCheck({status: true, value: afterCheck.value});\n        delete tempStateObj['after'];\n    \n    } else {\n\n    if (e.target.name === 'after' &&  afterCheck.status === true) {\n      \n      setAfterCheck({status: false, value: afterCheck.value});\n      tempStateObj.after =  afterCheck.value;\n\n        }\n      }\n    }\n  }\n\n    updateFilter(tempStateObj);\n   \n  }\n\n  //upon reset of form fields - all state must be emptied.\n  const resetFilter = e => {\n    updateFilter({});\n    setBeforeCheck({status: true});\n    setAfterCheck({status: true});\n  }\n\n  const updateBoxForFave = () => {\n    props.updateFaveBox();\n    props.updateIsChecked();\n  }\n  \n\n    return (\n    <div id=\"filterBox\">\n      <div id=\"filtersAndCheck\">\n        <div id=\"checkBoxDiv\"> <input type=\"checkbox\" className=\"checkboxFave\" onChange={updateBoxForFave}/> </div>\n        <h1 id=\"filterTitle\">Play Filters</h1>\n      </div>\n      <hr/>\n      <div id=\"filterContentBox\">\n        \n        <form onSubmit = {handleSubmit}>\n          <div id=\"searchTitleBox\">\n            <label htmlFor=\"title\">Title</label>\n            <br/>\n            <input type=\"text\" name=\"title\" id=\"searchTitleInput\" placeholder=\"Search Title\" onChange = {handleFieldClick}></input>\n          </div>\n          <div id=\"searchYearBox\">\n            <label htmlFor=\"year\" id=\"yearTitle\"> Year </label> <br />\n\n            <div id=\"beforeSearch\">\n              <div id=\"beforeCheckBox\">\n                <input type=\"checkbox\" name=\"before\" onChange={handleCheckBoxClick} />\n              </div>\n              <label htmlFor=\"before\" name=\"before\" id=\"labelBefore\">\n                Before\n                <input type=\"text\" name=\"before\" id=\"inputBefore\" disabled = {beforeCheck.status} onChange = {handleFieldClick}/>\n              </label>\n            </div>\n\n            <br/>\n\n            <div id=\"afterSearch\"> \n              <div id=\"afterCheckBox\">\n                <input type=\"checkbox\"  name=\"after\" onChange={handleCheckBoxClick}/> \n                <label htmlFor=\"after\" name=\"after\" id=\"labelAfter\"> \n                  After\n                  <input type=\"text\" name=\"after\" id=\"inputAfter\" disabled = {afterCheck.status} onChange = {handleFieldClick} />\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <div id=\"genreBox\">\n            <label htmlFor=\"genre\">Genre</label>\n            <br/>\n            <select name=\"genre\" id=\"genre\" onChange = {handleFieldClick}>\n              <option  defaultValue = ''></option>\n              <option name = \"genre\" value=\"comedy\">comedy</option>\n              <option name = \"genre\" value=\"tragedy\">tragedy</option>\n              <option name = \"genre\" value=\"history\">history</option>\n            </select>\n          </div>\n\n          <div id=\"filterButtons\">\n            <button type=\"submit\" id=\"filterButton\"> Filter </button>\n            <button type=\"reset\" id=\"clearButton\" onClick={resetFilter}> Clear </button>\n          </div>\n\n        </form>\n      </div>\n  </div>\n    \n    );\n    \n};\n\nexport default FilterBox;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst ListBoxItem = (props) => {\n  const add = () => {\n    props.addToLike(props.play);\n  };\n\n  const currentPlay = () => {\n    \n    props.updateCurrent(props.play);\n    const url =\n      \"https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=\" +\n      props.play.id;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        localStorage.setItem(\"playInfo\", JSON.stringify(data));\n      });\n  };\n\n  const userInfo = {userData: props.userData, logout: props.logout};\n\n  return (\n    <div id=\"listBoxItems\">\n      <p id=\"playInfoTitle\">{props.play.title}</p>c\n      <p id=\"playDate\">{props.play.likelyDate}</p>\n      <div id=\"playListButtons\">\n\n        <CSSTransition in={true}\n        timeout={10000}\n        classNames=\"fade\"\n        appear={true}>\n        <button type=\"button\" id=\"likeButton\" onClick={add}>\n          ❤\n        </button>\n        </CSSTransition>\n        <Link to={{ pathname: \"/playDetails\", state: {userInfo: userInfo}}}>\n          <button type=\"button\" id=\"viewButton\" onClick={currentPlay}>\n            View\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ListBoxItem;","import React from \"react\";\nimport ListBoxItem from \"./ListBoxItem\";\nimport styled from \"styled-components\";\n\nconst H1 = styled.h1`\n  font-style: italic;\n  color: red;\n`;\n\nconst ListBox = (props) => {\n  const sortByTitle = () => {\n    props.sortTitle();\n  };\n\n  const sortByYear = () => {\n    props.sortYear();\n  };\n\n  return (\n    <div id=\"listBox\">\n      <h1 id=\"listTitle\">List / Match</h1>\n      <hr />\n\n      <div id=\"listPlayInfo\">\n        {props.matchesBoolean === true ? (\n          <div>\n            <div id=\"listHeader\">\n              <h2\n                id=\"titleLabel\"\n                style={{ cursor: \"pointer\" }}\n                onClick={sortByTitle}\n              >\n                Title\n              </h2>{\" \"}\n              <h2\n                id=\"listLabel\"\n                style={{ cursor: \"pointer\" }}\n                onClick={sortByYear}\n              >\n                Year\n              </h2>{\" \"}\n              <p></p>\n            </div>\n\n            <div id=\"listPlayBox\">\n              {props.plays.map((p, index) => (\n                <ListBoxItem\n                  userData = {props.userData} \n                  logout = {props.logout}\n                  play={p}\n                  addToLike={props.addToLike}\n                  updateCurrent={props.updateCurrent}\n                  key={index}\n                />\n              ))}\n            </div>\n          </div>\n        ) : (\n          <H1>No Matches Found. Please Try Again! </H1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ListBox;\n","import React from \"react\";\nimport HeaderBar from \"./HeaderBar\";\nimport FavoriteBox from \"./FavoritesBox\";\nimport FilterBox from \"./FilterBox\";\nimport ListBox from \"./ListBox\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport loadingGif from '../loadingGif/giphy.gif';\n\nconst DefaultPage = (props) => {\n\n  const location = useLocation();\n    //check if matches are found from filter.\n  const [matchesFound, setMatchesFound] = useState(true);\n  useEffect(() => {\n    if (location.state.filters) {\n      props.setFilteredData(location.state.filters);\n    }    \n  }, []);\n\n  let title = \"\";\n  if (location.state.title) {\n    title = location.state.title;\n  }\n\n  const updateFilteredData = (filter) => {\n    let updatedFilteredData = [];\n\n    if (Object.keys(filter).length === 0) {\n      updatedFilteredData = [...props.mainData];\n    } else {\n      //Must convert to lower case to obtain all possible matches for title, before initiating filter.\n      if (filter.title) {\n        filter.title = filter.title.toLowerCase();\n      }\n\n      //Loop through main data, and contrast with each filter possibility, to render all possible matches.\n      //Checks if each \"filter\" state object property is set, and then it can verify whether it constains a match.\n      props.mainData.forEach((d) => {\n        if (filter.title && filter.genre && filter.before && filter.after) {\n          if (\n            d.title.toLowerCase().includes(filter.title) &&\n            d.genre === filter.genre &&\n            d.likelyDate < filter.before &&\n            d.likelyDate > filter.after\n          ) {\n            updatedFilteredData.push(d);\n          }\n        } else {\n          if (filter.title && filter.genre && filter.before) {\n            if (\n              d.title.toLowerCase().includes(filter.title) &&\n              d.genre === filter.genre &&\n              d.likelyDate < filter.before\n            ) {\n              updatedFilteredData.push(d);\n            }\n          } else {\n            if (filter.title && filter.before && filter.after) {\n              if (\n                d.title.toLowerCase().includes(filter.title) &&\n                d.likelyDate < filter.before &&\n                d.likelyDate > filter.after\n              ) {\n                updatedFilteredData.push(d);\n              }\n            } else {\n              if (filter.title && filter.after && filter.genre) {\n                if (\n                  d.title.toLowerCase().includes(filter.title) &&\n                  d.likelyDate > filter.after &&\n                  d.genre === filter.genre\n                ) {\n                  updatedFilteredData.push(d);\n                }\n              } else {\n                if (filter.genre && filter.before && filter.after) {\n                  if (\n                    d.genre === filter.genre &&\n                    d.likelyDate < filter.before &&\n                    d.likelyDate > filter.after\n                  ) {\n                    updatedFilteredData.push(d);\n                  }\n                } else {\n                  if (filter.title && filter.genre) {\n                    if (\n                      d.title.toLowerCase().includes(filter.title) &&\n                      d.genre === filter.genre\n                    ) {\n                      updatedFilteredData.push(d);\n                    }\n                  } else {\n                    if (filter.title && filter.after) {\n                      if (\n                        d.title.toLowerCase().includes(filter.title) &&\n                        d.likelyDate > filter.after\n                      ) {\n                        updatedFilteredData.push(d);\n                      }\n                    } else {\n                      if (filter.title && filter.before) {\n                        if (\n                          d.title.toLowerCase().includes(filter.title) &&\n                          d.likelyDate < filter.before\n                        ) {\n                          updatedFilteredData.push(d);\n                        }\n                      } else {\n                        if (filter.genre && filter.before) {\n                          if (\n                            d.genre === filter.genre &&\n                            d.likelyDate < filter.before\n                          ) {\n                            updatedFilteredData.push(d);\n                          }\n                        } else {\n                          if (filter.genre && filter.after) {\n                            if (\n                              d.genre === filter.genre &&\n                              d.likelyDate > filter.after\n                            ) {\n                              updatedFilteredData.push(d);\n                            }\n                          } else {\n                            if (filter.before && filter.after) {\n                              if (\n                                d.likelyDate < filter.before &&\n                                d.likelyDate > filter.after\n                              ) {\n                                updatedFilteredData.push(d);\n                              }\n                            } else {\n                              if (filter.genre) {\n                                if (d.genre === filter.genre) {\n                                  updatedFilteredData.push(d);\n                                }\n                              } else {\n                                if (filter.title) {\n                                  if (\n                                    d.title.toLowerCase().includes(filter.title)\n                                  ) {\n                                    updatedFilteredData.push(d);\n                                  }\n                                } else {\n                                  if (filter.before) {\n                                    if (d.likelyDate < filter.before) {\n                                      updatedFilteredData.push(d);\n                                    }\n                                  } else {\n                                    if (filter.after) {\n                                      if (d.likelyDate > filter.after) {\n                                        updatedFilteredData.push(d);\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n\n    if (updatedFilteredData.length === 0) {\n      setMatchesFound(false);\n    } else {\n      setMatchesFound(true);\n    }\n\n    props.setFilteredData(updatedFilteredData);\n  };\n\n  const [sortedPlays, setsortedPlays] = useState(props.plays);\n\n  const sortTitle = () => {\n    let sortData = props.plays.sort((a, b) => {\n      let at = a.title.toLowerCase();\n      let bt = b.title.toLowerCase();\n\n      if (at < bt) {\n        return -1;\n      }\n      if (at > bt) {\n        return 1;\n      }\n      return 0;\n    });\n    setsortedPlays(sortData);\n    console.log([...sortData]);\n  };\n  const sortYear = () => {\n    let sortData = props.plays.sort((a, b) => {\n      let ay = parseInt(a.likelyDate, 10);\n      let by = parseInt(b.likelyDate, 10);\n\n      if (ay < by) {\n        return -1;\n      }\n      if (ay > by) {\n        return 1;\n      }\n      return 0;\n    });\n    setsortedPlays([...sortData]);\n  };\n\n  return (\n    <div className=\"defaultPage\">\n      <HeaderBar userData = {props.userData} logout = {props.logout}/>\n      <div id=\"defaultPageInfoBox\">\n        {props.showFavorites && props.isChecked === false ? (\n          <div id=\"defaultFavoriteBox\">\n            {\" \"}\n            <FavoriteBox\n              plays={props.likedPlays}\n              removeFromLike={props.removeFromLike}\n              updateCurrent={props.updateCurrent}\n            />{\" \"}\n          </div>\n        ) : (\n          <div id=\"hiddenFaveBox\"> </div>\n        )}\n\n        <FilterBox\n          updateFilteredData={updateFilteredData}\n          title={title}\n          matchesFound={matchesFound}\n          updateIsChecked={props.updateIsChecked}\n          updateFaveBox={props.updateFaveBox}\n        />\n        <ListBox\n          userData = {props.userData} \n          logout = {props.logout}\n          plays={props.plays}\n          addToLike={props.addToLike}\n          removeFromLike={props.removeFromLike}\n          updateCurrent={props.updateCurrent}\n          matchesBoolean={matchesFound}\n          sortTitle={sortTitle}\n          sortYear={sortYear}\n        />\n     \n      </div>\n    </div>\n        \n  );\n};\n\nexport default DefaultPage;\n","export default __webpack_public_path__ + \"static/media/giphy.ce09e4a2.gif\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { message} from 'antd';\n\nconst FavoriteItemDetails = (props) => {\n  const info = () => {\n    props.removeFromLike(props.play);\n    message.info(props.play.title + \" has been removed\");\n  };\n\n  const updateCurrentPlay = () => {\n    props.updateCurrent(props.play);\n\n    const url = \"https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=\"+ props.play.id;\n    fetch (url)\n    .then (response => response.json())\n    .then(data => { localStorage.setItem(\"playInfo\", JSON.stringify(data))} )\n    \n    props.updateTab();\n  }\n\n  \n\n  return (\n    <div id=\"favoriteItem\">\n      <Link to=\"/playDetails\">\n        <p onClick={updateCurrentPlay}> {\" \"}\n          {props.play.title}{\" \"} </p>\n\n      </Link>\n\n      <button type=\"button\" id=\"deleteButton\" onClick={info}>\n        Remove\n      </button>\n    </div>\n  );\n};\n\nexport default FavoriteItemDetails;\n","import React from \"react\";\nimport FavoriteItemDetails from \"./FavoriteItemDetails\";\n\nconst FavoriteBoxDetails = (props) => {\n  return (\n    <div id=\"favoritesBox\">\n      <h1>Favorites</h1>\n      <hr/>\n      <div id=\"favoritesList\">\n        {props.plays.map((p, index) => (\n        <FavoriteItemDetails play={p} removeFromLike={props.removeFromLike} \n        updateCurrent={props.updateCurrent} updateTab={props.updateTab}\n          key={index}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FavoriteBoxDetails;\n","import React from \"react\";\n\nconst DetailsTab = (props) => {\n  return (\n    <div className=\"DetailsTab\">\n      <h1> Play Info </h1>\n      <p> Likely date of composition: {props.current.likelyDate}</p>\n      <p> Genre: {props.current.genre}</p>\n      <h1> Web Links</h1>\n      <p> Wiki Link: {props.current.wiki}</p>\n      <p> Gutenberg Link: {props.current.gutenberg}</p>\n      <p> Shakespear.org Link: {props.current.shakespeareOrg}</p>\n      <h1> Description </h1>\n      <p> {props.current.desc} </p>\n    </div>\n  );\n};\nexport default DetailsTab;\n","import React from \"react\";\n\nconst CharactersTab = (props) => {  \n\n  let i = [];\n  i = JSON.parse(localStorage.getItem(\"playInfo\"));\n  const personas = i.persona;\n\n  return (\n    <div className=\"CharactersTab\">\n      {personas.map((p, index) => {\n        return (\n          <div className=\"allPlayers\" key={index}>\n            <p key={index} className=\"position\">\n              Position: {p.position}\n            </p>\n            <p key={p.player} className=\"player\">\n              {\" \"}\n              {p.player}{\" \"}\n            </p>\n            <p key={p.desc} className=\"desc\">\n              {\" \"}\n              {p.desc}{\" \"}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default CharactersTab;\n","import React from \"react\";\nimport Highlighter from \"react-highlight-words\";\n\nconst TextTab = (props) => {\n\n  if (props.currentSpeaker === \"\") {\n    return (\n      <div className=\"TextTab\">\n        <h1>{props.playInfo.title}</h1>\n        <h2> {props.currentAct}</h2>\n        <h3> {props.currentScene}</h3>\n        <hr></hr>\n        <div id=\"sceneSpeeches\">\n          {props.playInfo.acts.map((a) => {\n            if (a.name === props.currentAct) {\n              return a.scenes.map((s, index) => {\n                if (s.name === props.currentScene) {\n                  return (\n                    <div id=\"actSceneDirection\" key={index}>\n                      <h4> {s.title} </h4>\n                      <h4> {s.stageDirection}</h4>\n                    </div>\n                  );\n                }\n              });\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    \n    return (\n      <div className=\"TextTab\">\n        <h1>{props.playInfo.title}</h1>\n        <h2> {props.currentAct}</h2>\n        <h3> {props.currentScene}</h3>\n        <hr></hr>\n        <div id=\"speakerSpeeches\">\n          {props.playInfo.acts.map((a) => {\n            if (a.name === props.currentAct) {\n              return a.scenes.map((s) => {\n                if (s.name === props.currentScene) {\n                  return s.speeches.map((speeches, index) => {\n                    if (speeches.speaker === props.currentSpeaker) {\n                      return (\n                        <div key={index}>\n                          <Highlighter\n                            searchWords={[props.highlightedWord]}\n                            textToHighlight={String(speeches.speaker)}\n                          />:\n                          <br /> \n                          <Highlighter\n                            searchWords={[props.highlightedWord]}\n                            textToHighlight={String(speeches.lines)}\n                          />\n                          <br /> <br />\n                        </div>\n                      );\n                    }\n                  });\n                }\n              });\n            }\n          })}\n        </div>\n      </div>\n    );\n  }\n};\nexport default TextTab;\n","import React from \"react\";\nimport DetailsTab from \"./DetailsTab\";\nimport CharactersTab from \"./CharactersTab\";\nimport TextTab from \"./TextTab\";\n\n\nconst Tabs = (props) => {\n  const handleDetailsTab = () => {\n    props.tabIsText(\"Details\");\n  };\n\n  const handleCharactersTab = () => {\n    props.tabIsText(\"Characters\");\n  };\n\n  const handleTextTab = () => {\n    props.tabIsText(\"Text\");\n  };\n\n  if (props.current.filename === \"\") {\n    return (\n      <div className=\"Tabs\">\n        <ul className=\"nav\">\n          <li className={props.tab === \"Details\" ? \"active\" : \"\"}>Details</li>\n        </ul>\n        <div className=\"outlet\">\n          <DetailsTab current={props.current} />\n        </div>\n      </div>\n    );\n  } else {\n\n    return (\n      <div className=\"Tabs\">\n        <ul className=\"nav\">\n          <li\n            className={props.tab === \"Details\" ? \"active\" : \"\"}\n            onClick={handleDetailsTab}\n          >\n            {\" \"}\n            Details\n          </li>\n          <li\n            className={props.tab === \"Characters\" ? \"active\" : \"\"}\n            onClick={handleCharactersTab}\n          >\n            {\" \"}\n            Characters\n          </li>\n          <li\n            className={props.tab === \"Text\" ? \"active\" : \"\"}\n            onClick={handleTextTab}\n          >\n            {\" \"}\n            Text\n          </li>\n        </ul>\n        <div id=\"tabHR\"> <hr></hr> </div>\n        \n        <div className=\"outlet\">\n          {props.tab === \"Details\" ? (\n            <DetailsTab current={props.current} />\n          ) : props.tab === \"Characters\" ? (\n            <CharactersTab current={props.current}/>\n          ) : props.tab === \"Text\" ? (\n            <TextTab\n              current={props.current}\n              playInfo={JSON.parse(localStorage.getItem(\"playInfo\"))}\n              //playInfo={props.playInfo}\n              currentAct={props.currentAct}\n              currentScene={props.currentScene}\n              currentSpeaker={props.currentSpeaker}\n              highlightedWord={props.highlightedWord}\n\n            />\n          ) : \"\"}\n        </div>\n      </div>\n    );\n  }\n};\n\n/* From https://blog.logrocket.com/how-to-build-tab-component-react/*/\n\nexport default Tabs;\n","import React, { useEffect, useState } from \"react\";\nimport HeaderBar from \"./HeaderBar\";\nimport FavoriteBoxDetails from \"./FavoritesBoxDetails\";\nimport Tabs from \"./TabComponent/Tabs\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../App.css\";\n\nconst PlayDetailPage = (props) => {\n  const [tab, setTab] = useState(\"Details\");\n  const [currentAct, setCurrentAct] = useState(\"ACT I\");\n  const [currentScene, setCurrentScene] = useState(\"SCENE I\");\n  const [currentSpeaker, setCurrentSpeaker] = useState(\"\");\n  const [highlightedWord, setHighlightedWord] = useState(\"\");\n\n  const location = useLocation();\n\n  const tabIsText = (tab) => {\n    setTab(tab);\n  };\n\n  const updateTabThroughClick = () => {\n    setTab(\"Details\");\n  };\n\n  const handleCurrentAct = (e) => {\n    console.log(e.target.value);\n    setCurrentAct(e.target.value);\n  };\n\n  const handleCurrentScene = (e) => {\n    console.log(e.target.value);\n    setCurrentScene(e.target.value);\n  };\n\n  const handleCurrentSpeaker = (e) => {\n    if (e.target.value !== \"\" && e.target.value !== \"clear\") {\n      console.log(e.target.value);\n      setCurrentSpeaker(e.target.value);\n    } else if (e.target.value === \"clear\") {\n      setCurrentSpeaker(\"\");\n      console.log(\"Search is cleared -->\" + e.target.value);\n    }\n  };\n\n  const addToLike = () => {\n    props.addToLike(props.current);\n  };\n\n  const handleHighlightedWord = (e) => {\n    console.log(e.target.value);\n    setHighlightedWord(e.target.value);\n  };\n\n  useEffect((props) => {\n    const getInfo = async () => {\n      try {\n        const url =\n          \"https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=\" +\n          props.current.id;\n        const response = await fetch(url);\n        const data = await response.json();\n        localStorage.setItem(\"playInfo\", JSON.stringify(data));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    // invoke the async function\n    getInfo();\n  }, []);\n\n  const updateBoxForFave = () => {\n    props.updateFaveBox();\n    props.updateIsChecked();\n  };\n\n  if (tab === \"Text\") {\n    let i = [];\n    i.push(JSON.parse(localStorage.getItem(\"playInfo\")));\n\n    return (\n      <div className=\"playDetailsPage\">\n        <HeaderBar userData = {props.location.state.userData} logout = {props.location.state.logout}></HeaderBar>\n\n        <div id=\"playDetailsBox\">\n          {props.showFavorites && props.isChecked === false ? (\n            <div id=\"detailsFavoriteList\">\n              <FavoriteBoxDetails\n                plays={props.likedPlays}\n                removeFromLike={props.removeFromLike}\n                updateCurrent={props.updateCurrent}\n                updateTab={updateTabThroughClick}\n              />\n            </div>\n          ) : (\n            <div id=\"hiddenFaveBox\"> </div>\n          )}\n\n          <div id=\"playTitleBox\">\n            <div id=\"checkAndTitle\">\n              <div id=\"checkBoxDiv\">\n                {\" \"}\n                <input\n                  type=\"checkbox\"\n                  className=\"checkboxFave\"\n                  onChange={updateBoxForFave}\n                />{\" \"}\n              </div>\n              <h1 id=\"playTitle\">{props.current.title}</h1>\n            </div>\n\n            <hr></hr>\n\n            <div id=\"formBox\">\n              <form id=\"textFilterBox\">\n                {/* This handles the act filter and adds current act*/}\n\n                <select name=\"act\" id=\"act\" onChange={handleCurrentAct}>\n                  {i[0].acts.map((a) => {\n                    return (\n                      <option value={a.name} key={a.name}>\n                        {\" \"}\n                        {a.name}{\" \"}\n                      </option>\n                    );\n                  })}\n                </select>\n\n                {/* This handles the scene filter corresponding to the act*/}\n                <select name=\"scene\" id=\"scene\" onChange={handleCurrentScene}>\n                  {i[0].acts.map((act) => {\n                    if (act.name === currentAct) {\n                      return act.scenes.map((s) => {\n                        return (\n                          <option value={s.name} key={s.name}>\n                            {\" \"}\n                            {s.name}{\" \"}\n                          </option>\n                        );\n                      });\n                    }\n                  })}\n                </select>\n              </form>\n\n              <form className=\"playerSearch\">\n                {/* This handles the word filter corresponding to the speaker*/}\n                <select\n                  name=\"speaker\"\n                  id=\"speaker\"\n                  onChange={handleCurrentSpeaker}\n                >\n                  <option value=\"\"> Choose Player Here </option>\n                  {i[0].persona.map((p) => {\n                    return (\n                      <option value={p.player} key={p.player}>\n                        {\" \"}\n                        {p.player}{\" \"}\n                      </option>\n                    );\n                  })}\n                  <option value=\"clear\"> CLEAR SEARCH </option>\n                </select>\n                <br />\n                <input\n                  id=\"highlightedWord\"\n                  type=\"text\"\n                  name=\"name\"\n                  onChange={handleHighlightedWord}\n                />\n              </form>\n            </div>\n            <div id=\"textPlayDetailsButtons\">\n              <Link\n                to={{ pathname: \"/default\", state: { filters: props.filters } }}\n              >\n                <button type=\"button\" id=\"closeButton\">\n                  {\" \"}\n                  Close{\" \"}\n                </button>\n              </Link>\n              <button onClick={addToLike} id=\"likeButton\">\n                {\" \"}\n                ❤{\" \"}\n              </button>\n            </div>\n          </div>\n\n          <div id=\"tabsBox\">\n            <Tabs\n              current={props.current}\n              tab={tab}\n              tabIsText={tabIsText}\n              currentAct={currentAct}\n              currentScene={currentScene}\n              currentSpeaker={currentSpeaker}\n              highlightedWord={highlightedWord}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"playDetailsPage\">\n        <HeaderBar userData = {location.state.userInfo.userData} logout = {location.state.userInfo.logout}/> \n\n        <div id=\"playDetailsBox\">\n          {props.showFavorites && props.isChecked === false ? (\n            <div id=\"detailsFavoriteList\">\n              <FavoriteBoxDetails\n                plays={props.likedPlays}\n                removeFromLike={props.removeFromLike}\n                updateCurrent={props.updateCurrent}\n                updateTab={updateTabThroughClick}\n              />\n            </div>\n          ) : (\n            <div id=\"hiddenFaveBox\"> </div>\n          )}\n\n          <div id=\"playTitleBox\">\n            <div id=\"checkAndTitle\">\n              <div id=\"checkBoxDiv\">\n                {\" \"}\n                <input\n                  type=\"checkbox\"\n                  className=\"checkboxFave\"\n                  onChange={updateBoxForFave}\n                />{\" \"}\n              </div>\n              <h1 id=\"playTitle\">{props.current.title}</h1>\n            </div>\n            <hr></hr>\n            <div id=\"playSummaryBox\">\n              <div id=\"synopsisBox\">{props.current.synopsis}</div>\n\n              <div id=\"playDetailsButtons\">\n                <Link\n                  to={{\n                    pathname: \"/default\",\n                    state: { filters: props.filters },\n                  }}\n                >\n                  <button type=\"button\" id=\"closeButton\">\n                    {\" \"}\n                    Close{\" \"}\n                  </button>\n                </Link>\n                <button onClick={addToLike} id=\"likeButton\">\n                  {\" \"}\n                  ❤{\" \"}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div id=\"tabsBox\">\n            <Tabs\n              current={props.current}\n              tab={tab}\n              tabIsText={tabIsText}\n              currentAct={currentAct}\n              currentScene={currentScene}\n              currentSpeaker={currentSpeaker}\n              highlightedWord={highlightedWord}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default PlayDetailPage;\n","import HomePage from \"./components/HomePage\";\nimport DefaultPage from \"./components/DefaultPage\";\nimport PlayDetailPage from \"./components/PlayDetailPage\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [userData, setUserData] = useState(null);\n  const [filteredData, setFilteredData] = useState([]);\n  const [like, setLike] = useState([]);\n  const [currentPlay, setCurrentPlay] = useState([]);\n  const [isChecked, setIsChecked] = useState(false);\n  const [showFavorites, setShowFavorites] = useState(true); \n\n\nconst logout = () => {\n  window.location.assign('https://comp4513-assignment2.herokuapp.com/logout');\n}\n\n  useEffect(() => {\n\n    Axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"https://comp4513-assignment2.herokuapp.com/user\",\n    }).then((res) => {\n      setUserData(res.data);\n      console.log(res.data);\n    });\n\n \n},  []);\n\n//http://localhost:8080/user\n\n// const populateAllPlays = () => {\n//   Axios({\n//     method: \"GET\",\n//     withCredentials: true,\n//     url: \"http://localhost:8080/api/list\",\n//   }).then((res) => {\n//     console.log(res.data);\n//     localStorage.setItem(\"playData\", JSON.stringify(res.data));\n//     setData(res.data);\n//     console.log(res.data);\n//   });  \n// }\n\nuseEffect(() => {\n\n\n  Axios({\n    method: \"GET\",\n    withCredentials: true,\n    url: \"https://comp4513-assignment2.herokuapp.com/api/list\",\n  }).then((res) => {\n    console.log(res.data);\n    localStorage.setItem(\"playData\", JSON.stringify(res.data));\n    setData(res.data);\n    console.log(res.data);\n  });  \n\n  if (localStorage.getItem(\"playData\") == null) {\n    // populateAllPlays();\n  } else {\n    setData(JSON.parse(localStorage.getItem(\"playData\")));\n  }\n\n  // invoke the async function\n},  []);\n\n// useEffect(() => {\n// const getUserData = async () => {\n//   try {\n//     const url =  \"http://localhost:8080/user\";\n//     const response = await fetch(url);\n//     localStorage.setItem(\"userData\", JSON.stringify(userData));\n//   } catch(err) {\n//     console.error(err);\n//   }\n// };\n// if (localStorage.getItem(\"userData\") == null) {\n//   getUserData();\n// } else {\n//   setData(JSON.parse(localStorage.getItem(\"userData\")));\n// }\n// });\n\n  const addLikes = (play) => {\n    let temp = [...like];\n    if (!temp.find((e) => e.title === play.title)) {\n      temp.push(play);\n      setLike(temp);\n    } else {\n      console.log(\"already in list\");\n    }\n  };\n\n  const removeLikes = (play) => {\n    const temp = [...like];\n    const index = temp.indexOf(play);\n    temp.splice(index, 1);\n    setLike(temp);\n  };\n\n  const updateCurrentPlay = (clickedPlay) => {\n    setCurrentPlay(clickedPlay);\n    \n  };\n\n\n  const updateIsChecked = () => {\n    setIsChecked(!isChecked);\n  }\n\n  const updateFaveBox = () => {\n    setShowFavorites(!showFavorites);\n  }\n  \n  return (\n    <main>\n      <HashRouter basename='/'>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/home\" exact component={HomePage}/>\n        <Route path=\"/default\">\n          \n  \n\n        <DefaultPage\n              mainData={data}\n              userData={userData}\n              logout={logout}\n              setFilteredData={setFilteredData}\n              plays={filteredData}\n              likedPlays={like}\n              addToLike={addLikes}\n              removeFromLike={removeLikes}\n              updateCurrent={updateCurrentPlay}\n              current={currentPlay}\n              isChecked={isChecked}\n              updateIsChecked={updateIsChecked}\n              showFavorites={showFavorites}\n              updateFaveBox={updateFaveBox}\n\n            />\n          \n        </Route>\n      <Route path=\"/playDetails\">\n\n    \n        <PlayDetailPage\n          plays={data}\n          likedPlays={like}\n          addToLike={addLikes}\n          removeFromLike={removeLikes}\n          current={currentPlay}\n          updateCurrent={updateCurrentPlay}\n          filters={filteredData}\n\n          isChecked={isChecked}\n          updateIsChecked={updateIsChecked}\n\n          showFavorites={showFavorites}\n          updateFaveBox={updateFaveBox}\n        />\n  \n      </Route>\n     </ HashRouter>\n    </main>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}